<?xml version="1.0" encoding="utf-8" ?> 
<!--============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BatisMap.cst at 2010-12-17 15:46:12
//				By xincai.wu
//===========================================================================-->
<sqlMap namespace="ManageUser"
	xmlns="http://ibatis.apache.org/mapping" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<alias>
		<typeAlias alias="ManageUser" type="TMM.Model.ManageUser,TMM.Models" />
	</alias>

	<statements>

		<select id="GetCount"  parameterClass="map" resultClass="System.Int32">
			SELECT count(*) FROM [ManageUser]
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="Password" prepend="AND">
					[Password] = #Password#
				</isPropertyAvailable>
				<isPropertyAvailable property="TrueName" prepend="AND">
					[TrueName] = #TrueName#
				</isPropertyAvailable>
				<isPropertyAvailable property="Mobile" prepend="AND">
					[Mobile] = #Mobile#
				</isPropertyAvailable>
				<isPropertyAvailable property="Level" prepend="AND">
					[Level] = #Level#
				</isPropertyAvailable>
				<isPropertyAvailable property="CreateTime" prepend="AND">
					[CreateTime] = #CreateTime#
				</isPropertyAvailable>
				<isPropertyAvailable property="UpdateTime" prepend="AND">
					[UpdateTime] = #UpdateTime#
				</isPropertyAvailable>
				<isPropertyAvailable property="Remark" prepend="AND">
					[Remark] = #Remark#
				</isPropertyAvailable>
			</dynamic>
		</select>
		

		<select id="GetList" parameterClass="map" resultClass="ManageUser">
			SELECT
				[UserName]
				, [Password]
				, [TrueName]
				, [Mobile]
				, [Level]
				, [CreateTime]
				, [UpdateTime]
				, [Remark]
 FROM 
			(SELECT
			<isPropertyAvailable property="Top" prepend="">
				Top (#Top#)
			</isPropertyAvailable>
			<isPropertyAvailable property="OrderBy" prepend="">
				ROW_NUMBER() OVER (order by $OrderBy$) as RowNumber,
			</isPropertyAvailable>
			*
			FROM [ManageUser]
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="Password" prepend="AND">
					[Password] = #Password#
				</isPropertyAvailable>
				<isPropertyAvailable property="TrueName" prepend="AND">
					[TrueName] = #TrueName#
				</isPropertyAvailable>
				<isPropertyAvailable property="Mobile" prepend="AND">
					[Mobile] = #Mobile#
				</isPropertyAvailable>
				<isPropertyAvailable property="Level" prepend="AND">
					[Level] = #Level#
				</isPropertyAvailable>
				<isPropertyAvailable property="CreateTime" prepend="AND">
					[CreateTime] = #CreateTime#
				</isPropertyAvailable>
				<isPropertyAvailable property="UpdateTime" prepend="AND">
					[UpdateTime] = #UpdateTime#
				</isPropertyAvailable>
				<isPropertyAvailable property="Remark" prepend="AND">
					[Remark] = #Remark#
				</isPropertyAvailable>
			</dynamic>
			) t
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="StartRecord" prepend="AND">
				RowNumber>#StartRecord#
				</isPropertyAvailable>
			</dynamic>
		</select>
		
		<select id="Get" parameterClass="Int32" resultClass="ManageUser">
			SELECT
				[UserName]
				, [Password]
				, [TrueName]
				, [Mobile]
				, [Level]
				, [CreateTime]
				, [UpdateTime]
				, [Remark]
			FROM [ManageUser]
			WHERE
				([UserName] = #UserName#)
		</select>
		
		

		
		<insert id="Insert" parameterClass="ManageUser" resultClass="Int32">
			INSERT INTO [ManageUser] (
        [UserName]
				, [Password]
				, [TrueName]
				, [Mobile]
				, [Level]
				, [CreateTime]
				, [UpdateTime]
				, [Remark]
			) VALUES (
      #UserName#
				, #Password#
				, #TrueName#
				, #Mobile#
				, #Level#
				, #CreateTime#
				, #UpdateTime#
				, #Remark#
			)
			
			SELECT @@IDENTITY
		</insert>

		<update id="Update" parameterClass="ManageUser" resultClass="Int32">
			UPDATE [ManageUser] SET
				 [Password] = #Password#
				, [TrueName] = #TrueName#
				, [Mobile] = #Mobile#
				, [Level] = #Level#
				, [CreateTime] = #CreateTime#
				, [UpdateTime] = #UpdateTime#
				, [Remark] = #Remark#
			WHERE
				([UserName] = #UserName#)
				
			SELECT @@rowcount
		</update>

		<delete id="Delete" parameterClass="int32" resultClass="Int32">
			DELETE FROM [ManageUser]
			WHERE
				([UserName] = #UserName#)
				
			select @@rowcount
		</delete>
		
	</statements>
</sqlMap>

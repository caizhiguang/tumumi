<?xml version="1.0" encoding="utf-8" ?> 
<!--============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BatisMap.cst at 2010-12-17 22:06:21
//				By xincai.wu
//===========================================================================-->
<sqlMap namespace="ExchangeAccount"
	xmlns="http://ibatis.apache.org/mapping" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<alias>
		<typeAlias alias="ExchangeAccount" type="TMM.Model.ExchangeAccount,TMM.Models" />		
	</alias>

	<statements>

		<select id="GetCount"  parameterClass="map" resultClass="System.Int32">
			SELECT count(*) FROM [ExchangeAccount]
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="UserId" prepend="AND">
					[UserId] = #UserId#
				</isPropertyAvailable>
				<isPropertyAvailable property="AccountName" prepend="AND">
					[AccountName] = #AccountName#
				</isPropertyAvailable>
				<isPropertyAvailable property="AccountNo" prepend="AND">
					[AccountNo] = #AccountNo#
				</isPropertyAvailable>
				<isPropertyAvailable property="AccountType" prepend="AND">
					[AccountType] = #AccountType#
				</isPropertyAvailable>
				<isPropertyAvailable property="BankName" prepend="AND">
					[BankName] = #BankName#
				</isPropertyAvailable>
				<isPropertyAvailable property="ProvinceId" prepend="AND">
					[ProvinceId] = #ProvinceId#
				</isPropertyAvailable>
				<isPropertyAvailable property="ProvinceName" prepend="AND">
					[ProvinceName] = #ProvinceName#
				</isPropertyAvailable>
				<isPropertyAvailable property="AreaId" prepend="AND">
					[AreaId] = #AreaId#
				</isPropertyAvailable>
				<isPropertyAvailable property="AreaName" prepend="AND">
					[AreaName] = #AreaName#
				</isPropertyAvailable>
				<isPropertyAvailable property="CreateTime" prepend="AND">
					[CreateTime] = #CreateTime#
				</isPropertyAvailable>
			</dynamic>
		</select>
		

		<select id="GetList" parameterClass="map" resultClass="ExchangeAccount">
			SELECT
				[AccountId]
				, [UserId]
				, [AccountName]
				, [AccountNo]
				, [AccountType]
				, [BankName]
				, [ProvinceId]
				, [ProvinceName]
				, [AreaId]
				, [AreaName]
				, [CreateTime]
 FROM 
			(SELECT
			<isPropertyAvailable property="Top" prepend="">
				Top (#Top#)
			</isPropertyAvailable>
			<isPropertyAvailable property="OrderBy" prepend="">
				ROW_NUMBER() OVER (order by $OrderBy$) as RowNumber,
			</isPropertyAvailable>
			*
			FROM [ExchangeAccount]
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="UserId" prepend="AND">
					[UserId] = #UserId#
				</isPropertyAvailable>
				<isPropertyAvailable property="AccountName" prepend="AND">
					[AccountName] = #AccountName#
				</isPropertyAvailable>
				<isPropertyAvailable property="AccountNo" prepend="AND">
					[AccountNo] = #AccountNo#
				</isPropertyAvailable>
				<isPropertyAvailable property="AccountType" prepend="AND">
					[AccountType] = #AccountType#
				</isPropertyAvailable>
				<isPropertyAvailable property="BankName" prepend="AND">
					[BankName] = #BankName#
				</isPropertyAvailable>
				<isPropertyAvailable property="ProvinceId" prepend="AND">
					[ProvinceId] = #ProvinceId#
				</isPropertyAvailable>
				<isPropertyAvailable property="ProvinceName" prepend="AND">
					[ProvinceName] = #ProvinceName#
				</isPropertyAvailable>
				<isPropertyAvailable property="AreaId" prepend="AND">
					[AreaId] = #AreaId#
				</isPropertyAvailable>
				<isPropertyAvailable property="AreaName" prepend="AND">
					[AreaName] = #AreaName#
				</isPropertyAvailable>
				<isPropertyAvailable property="CreateTime" prepend="AND">
					[CreateTime] = #CreateTime#
				</isPropertyAvailable>
			</dynamic>
			) t
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="StartRecord" prepend="AND">
				RowNumber>#StartRecord#
				</isPropertyAvailable>
			</dynamic>
		</select>
		
		<select id="Get" parameterClass="Int32" resultClass="ExchangeAccount">
			SELECT
				[AccountId]
				, [UserId]
				, [AccountName]
				, [AccountNo]
				, [AccountType]
				, [BankName]
				, [ProvinceId]
				, [ProvinceName]
				, [AreaId]
				, [AreaName]
				, [CreateTime]
			FROM [ExchangeAccount]
			WHERE
				([AccountId] = #AccountId#)
		</select>
		
		

		
		<insert id="Insert" parameterClass="ExchangeAccount" resultClass="Int32">
			INSERT INTO [ExchangeAccount] (
				 [UserId]
				, [AccountName]
				, [AccountNo]
				, [AccountType]
				, [BankName]
				, [ProvinceId]
				, [ProvinceName]
				, [AreaId]
				, [AreaName]
				, [CreateTime]
			) VALUES (
				 #UserId#
				, #AccountName#
				, #AccountNo#
				, #AccountType#
				, #BankName#
				, #ProvinceId#
				, #ProvinceName#
				, #AreaId#
				, #AreaName#
				, #CreateTime#
			)
			
			SELECT @@IDENTITY
		</insert>

		<update id="Update" parameterClass="ExchangeAccount" resultClass="Int32">
			UPDATE [ExchangeAccount] SET
				 [UserId] = #UserId#
				, [AccountName] = #AccountName#
				, [AccountNo] = #AccountNo#
				, [AccountType] = #AccountType#
				, [BankName] = #BankName#
				, [ProvinceId] = #ProvinceId#
				, [ProvinceName] = #ProvinceName#
				, [AreaId] = #AreaId#
				, [AreaName] = #AreaName#
				, [CreateTime] = #CreateTime#
			WHERE
				([AccountId] = #AccountId#)
				
			SELECT @@rowcount
		</update>

		<delete id="Delete" parameterClass="int32" resultClass="Int32">
			DELETE FROM [ExchangeAccount]
			WHERE
				([AccountId] = #AccountId#)
				
			select @@rowcount
		</delete>
		
	</statements>
</sqlMap>

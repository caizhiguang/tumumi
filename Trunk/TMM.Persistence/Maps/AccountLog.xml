<?xml version="1.0" encoding="utf-8" ?> 
<!--============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BatisMap.cst at 2010-12-17 22:06:21
//				By xincai.wu
//===========================================================================-->
<sqlMap namespace="AccountLog"
	xmlns="http://ibatis.apache.org/mapping" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<alias>
		<typeAlias alias="AccountLog" type="TMM.Model.AccountLog,TMM.Models" />		
	</alias>

	<statements>

		<select id="GetCount"  parameterClass="map" resultClass="System.Int32">
			SELECT count(*) FROM [AccountLog]
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="UserId" prepend="AND">
					[UserId] = #UserId#
				</isPropertyAvailable>
				<isPropertyAvailable property="OrderId" prepend="AND">
					[OrderId] = #OrderId#
				</isPropertyAvailable>
				<isPropertyAvailable property="Amount" prepend="AND">
					[Amount] = #Amount#
				</isPropertyAvailable>
				<isPropertyAvailable property="AccountWay" prepend="AND">
					[AccountWay] = #AccountWay#
				</isPropertyAvailable>
				<isPropertyAvailable property="Ip" prepend="AND">
					[Ip] = #Ip#
				</isPropertyAvailable>
				<isPropertyAvailable property="AdminRemark" prepend="AND">
					[AdminRemark] = #AdminRemark#
				</isPropertyAvailable>
				<isPropertyAvailable property="Sd" prepend="AND">
					<![CDATA[
					[CreateTime] >= #Sd#
					]]>
				</isPropertyAvailable>
				<isPropertyAvailable property="Ed" prepend="AND">
					<![CDATA[
					[CreateTime] <= #Ed#
					]]>
				</isPropertyAvailable>
				<isPropertyAvailable property="AccountWays" prepend="AND">
					[AccountWay] in(<iterate property="AccountWays" conjunction=",">#AccountWays[]#</iterate>)
				</isPropertyAvailable>
			</dynamic>
		</select>
		

		<select id="GetList" parameterClass="map" resultClass="AccountLog">
			SELECT
			[LogId]
			, [UserId]
			, [OrderId]
			, [Amount]
			, [AccountWay]
			, [Ip]
			, [AdminRemark]
			, [CreateTime]
			, [DocId] as [Doc.DocId]
			, [DocTitle] as [Doc.Title]
			, [PayWay]
			FROM
			(SELECT
			<isPropertyAvailable property="Top" prepend="">
				Top (#Top#)
			</isPropertyAvailable>
			<isPropertyAvailable property="OrderBy" prepend="">
				ROW_NUMBER() OVER (order by $OrderBy$) as RowNumber,
			</isPropertyAvailable>
			a.*,b.DocId,b.DocTitle
			FROM [AccountLog] a LEFT JOIN [TOrderDetail] b ON a.OrderId=b.OrderId
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="UserId" prepend="AND">
					[UserId] = #UserId#
				</isPropertyAvailable>
				<isPropertyAvailable property="OrderId" prepend="AND">
					[OrderId] = #OrderId#
				</isPropertyAvailable>
				<isPropertyAvailable property="Amount" prepend="AND">
					[Amount] = #Amount#
				</isPropertyAvailable>
				<isPropertyAvailable property="AccountWay" prepend="AND">
					[AccountWay] = #AccountWay#
				</isPropertyAvailable>
				<isPropertyAvailable property="Ip" prepend="AND">
					[Ip] = #Ip#
				</isPropertyAvailable>
				<isPropertyAvailable property="AdminRemark" prepend="AND">
					[AdminRemark] = #AdminRemark#
				</isPropertyAvailable>
				<isPropertyAvailable property="Sd" prepend="AND">
					<![CDATA[
					[CreateTime] >= #Sd#
					]]>					
				</isPropertyAvailable>
				<isPropertyAvailable property="Ed" prepend="AND">
					<![CDATA[
					[CreateTime] <= #Ed#
					]]>
				</isPropertyAvailable>
				<isPropertyAvailable property="AccountWays" prepend="AND">
					[AccountWay] in(<iterate property="AccountWays" conjunction=",">#AccountWays[]#</iterate>)
				</isPropertyAvailable>
			</dynamic>
			) t
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="StartRecord" prepend="AND">
				RowNumber>#StartRecord#
				</isPropertyAvailable>
			</dynamic>
		</select>
		
		<select id="Get" parameterClass="Int32" resultClass="AccountLog">
			SELECT
			[LogId]
			, [UserId]
			, [OrderId]
			, [Amount]
			, [AccountWay]
			, [Ip]
			, [AdminRemark]
			, [CreateTime]
			FROM [AccountLog]
			WHERE
			([LogId] = #LogId#)
		</select>
		
		

		
		<insert id="Insert" parameterClass="AccountLog" resultClass="Int32">
      INSERT INTO [AccountLog] (
      [UserId]
      , [OrderId]
      , [Amount]
      , [AccountWay]
      , [Ip]
      , [AdminRemark]
      , [CreateTime]
      , [PayWay]
      ) VALUES (
      #UserId#
      , #OrderId#
      , #Amount#
      , #AccountWay#
      , #Ip#
      , #AdminRemark#
      , #CreateTime#
      , #PayWay#
      )

      SELECT @@IDENTITY
    </insert>

		<update id="Update" parameterClass="AccountLog" resultClass="Int32">
			UPDATE [AccountLog] SET
				 [UserId] = #UserId#
				, [OrderId] = #OrderId#
				, [Amount] = #Amount#
				, [AccountWay] = #AccountWay#
				, [Ip] = #Ip#
				, [AdminRemark] = #AdminRemark#
			WHERE
				([LogId] = #LogId#)
				
			SELECT @@rowcount
		</update>

		<delete id="Delete" parameterClass="int32" resultClass="Int32">
			DELETE FROM [AccountLog]
			WHERE
				([LogId] = #LogId#)
				
			select @@rowcount
		</delete>

		<select id="SumIncome" parameterClass="Int32" resultClass="decimal">
			SELECT ISNULL(SUM(AMOUNT),0) FROM [AccountLog] WHERE UserId=#UserId# AND AMOUNT>0
		</select>
		
	</statements>
</sqlMap>

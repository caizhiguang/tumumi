<?xml version="1.0" encoding="utf-8" ?> 
<!--============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BatisMap.cst at 2010-12-17 15:46:12
//				By xincai.wu
//===========================================================================-->
<sqlMap namespace="M_Message"
	xmlns="http://ibatis.apache.org/mapping" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<alias>
		<typeAlias alias="M_Message" type="TMM.Model.M_Message,TMM.Models" />
	</alias>

	<statements>

		<select id="GetCount"  parameterClass="map" resultClass="System.Int32">
			SELECT count(*) FROM [M_Message]
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="SenderId" prepend="AND">
					[SenderId] = #SenderId#
				</isPropertyAvailable>
				<isPropertyAvailable property="RecieverId" prepend="AND">
					[RecieverId] = #RecieverId#
				</isPropertyAvailable>
				<isPropertyAvailable property="Title" prepend="AND">
					[Title] = #Title#
				</isPropertyAvailable>
				<isPropertyAvailable property="LikeTitle" prepend="AND">
					[Title] like #Title#
				</isPropertyAvailable>
				<isPropertyAvailable property="Content" prepend="AND">
					[Content] = #Content#
				</isPropertyAvailable>
				<isPropertyAvailable property="CreateTime" prepend="AND">
					[CreateTime] = #CreateTime#
				</isPropertyAvailable>
				<isPropertyAvailable property="IsRead" prepend="AND">
					[IsRead] = #IsRead#
				</isPropertyAvailable>
				<isPropertyAvailable property="Mtype" prepend="AND">
					[Mtype] = #Mtype#
				</isPropertyAvailable>
				<isPropertyAvailable property="RefId" prepend="AND">
					[RefId] = #RefId#
				</isPropertyAvailable>
				<isPropertyAvailable property="SendDeleteFlag" prepend="AND">
					[SendDeleteFlag] = #SendDeleteFlag#
				</isPropertyAvailable>
				<isPropertyAvailable property="RecieveDeleteFlag" prepend="AND">
					[RecieveDeleteFlag] = #RecieveDeleteFlag#
				</isPropertyAvailable>
			</dynamic>
		</select>
		

		<select id="GetList" parameterClass="map" resultClass="M_Message">
			SELECT
				[Mid]
				, [SenderId]
				, [RecieverId]
				, [Title]
				, [Content]
				, [CreateTime]
				, [IsRead]
				, [Mtype]
				, [RefId]
				, [SendDeleteFlag]
				, [RecieveDeleteFlag]
 FROM 
			(SELECT
			<isPropertyAvailable property="Top" prepend="">
				Top (#Top#)
			</isPropertyAvailable>
			<isPropertyAvailable property="OrderBy" prepend="">
				ROW_NUMBER() OVER (order by $OrderBy$) as RowNumber,
			</isPropertyAvailable>
			*
			FROM [M_Message]
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="SenderId" prepend="AND">
					[SenderId] = #SenderId#
				</isPropertyAvailable>
				<isPropertyAvailable property="RecieverId" prepend="AND">
					[RecieverId] = #RecieverId#
				</isPropertyAvailable>
				<isPropertyAvailable property="Title" prepend="AND">
					[Title] = #Title#
				</isPropertyAvailable>
				<isPropertyAvailable property="LikeTitle" prepend="AND">
					[Title] like #Title#
				</isPropertyAvailable>
				<isPropertyAvailable property="Content" prepend="AND">
					[Content] = #Content#
				</isPropertyAvailable>
				<isPropertyAvailable property="CreateTime" prepend="AND">
					[CreateTime] = #CreateTime#
				</isPropertyAvailable>
				<isPropertyAvailable property="IsRead" prepend="AND">
					[IsRead] = #IsRead#
				</isPropertyAvailable>
				<isPropertyAvailable property="Mtype" prepend="AND">
					[Mtype] = #Mtype#
				</isPropertyAvailable>
				<isPropertyAvailable property="RefId" prepend="AND">
					[RefId] = #RefId#
				</isPropertyAvailable>
				<isPropertyAvailable property="SendDeleteFlag" prepend="AND">
					[SendDeleteFlag] = #SendDeleteFlag#
				</isPropertyAvailable>
				<isPropertyAvailable property="RecieveDeleteFlag" prepend="AND">
					[RecieveDeleteFlag] = #RecieveDeleteFlag#
				</isPropertyAvailable>
			</dynamic>
			) t
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="StartRecord" prepend="AND">
				RowNumber>#StartRecord#
				</isPropertyAvailable>
			</dynamic>
		</select>
		
		<select id="Get" parameterClass="Int32" resultClass="M_Message">
			SELECT
				[Mid]
				, [SenderId]
				, [RecieverId]
				, [Title]
				, [Content]
				, [CreateTime]
				, [IsRead]
				, [Mtype]
				, [RefId]
				, [SendDeleteFlag]
				, [RecieveDeleteFlag]
			FROM [M_Message]
			WHERE
				([Mid] = #Mid#)
		</select>
		
		

		
		<insert id="Insert" parameterClass="M_Message" resultClass="Int32">
			INSERT INTO [M_Message] (
				 [SenderId]
				, [RecieverId]
				, [Title]
				, [Content]
				, [CreateTime]
				, [IsRead]
				, [Mtype]
				, [RefId]
				, [SendDeleteFlag]
				, [RecieveDeleteFlag]
			) VALUES (
				 #SenderId#
				, #RecieverId#
				, #Title#
				, #Content#
				, #CreateTime#
				, #IsRead#
				, #Mtype#
				, #RefId#
				, #SendDeleteFlag#
				, #RecieveDeleteFlag#
			)
			
			SELECT @@IDENTITY
		</insert>

		<update id="Update" parameterClass="M_Message" resultClass="Int32">
			UPDATE [M_Message] SET
				 [SenderId] = #SenderId#
				, [RecieverId] = #RecieverId#
				, [Title] = #Title#
				, [Content] = #Content#
				, [CreateTime] = #CreateTime#
				, [IsRead] = #IsRead#
				, [Mtype] = #Mtype#
				, [RefId] = #RefId#
				, [SendDeleteFlag] = #SendDeleteFlag#
				, [RecieveDeleteFlag] = #RecieveDeleteFlag#
			WHERE
				([Mid] = #Mid#)
				
			SELECT @@rowcount
		</update>

		<delete id="Delete" parameterClass="int32" resultClass="Int32">
			DELETE FROM [M_Message]
			WHERE
				([Mid] = #Mid#)
				
			select @@rowcount
		</delete>

		<update id="SetDeleteFlagByReciever" parameterClass="int32" resultClass="Int32">
			UPDATE [M_Message] SET
			
			[RecieveDeleteFlag] = 1
			WHERE
			([Mid] = #Mid#)

			select @@rowcount
		</update>

    <update id="SetDeleteFlagBySender" parameterClass="int32" resultClass="Int32">
      UPDATE [M_Message] SET

      [SendDeleteFlag] = 1
      WHERE
      ([Mid] = #Mid#)

      select @@rowcount
    </update>

    <update id="SetRead" parameterClass="int32" resultClass="Int32">
      UPDATE [M_Message] SET

      [IsRead] = 1
      WHERE
      ([Mid] = #Mid#)

      select @@rowcount
    </update>
		
	</statements>
</sqlMap>

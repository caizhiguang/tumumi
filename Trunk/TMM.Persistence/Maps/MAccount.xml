<?xml version="1.0" encoding="utf-8" ?> 
<!--============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BatisMap.cst at 2010-12-17 22:06:21
//				By xincai.wu
//===========================================================================-->
<sqlMap namespace="MAccount"
	xmlns="http://ibatis.apache.org/mapping" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<alias>
		<typeAlias alias="MAccount" type="TMM.Model.MAccount,TMM.Models" />		
	</alias>

	<statements>

		<select id="GetCount"  parameterClass="map" resultClass="System.Int32">
			SELECT count(*) FROM [MAccount]
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="UserId" prepend="AND">
					[UserId] = #UserId#
				</isPropertyAvailable>
				<isPropertyAvailable property="Amount" prepend="AND">
					[Amount] = #Amount#
				</isPropertyAvailable>
				<isPropertyAvailable property="UserLevel" prepend="AND">
					[UserLevel] = #UserLevel#
				</isPropertyAvailable>
				<isPropertyAvailable property="Score" prepend="AND">
					[Score] = #Score#
				</isPropertyAvailable>
				<isPropertyAvailable property="IsStop" prepend="AND">
					[IsStop] = #IsStop#
				</isPropertyAvailable>
				<isPropertyAvailable property="CreateTime" prepend="AND">
					[CreateTime] = #CreateTime#
				</isPropertyAvailable>
				<isPropertyAvailable property="UpdateTime" prepend="AND">
					[UpdateTime] = #UpdateTime#
				</isPropertyAvailable>
				<isPropertyAvailable property="Email" prepend="AND">
					b.[Email] = #Email#
				</isPropertyAvailable>
			</dynamic>
		</select>
		

		<select id="GetList" parameterClass="map" resultClass="MAccount">
			SELECT
			[AccountId]
			, [UserId]
			, [Amount]
			, [UserLevel]
			, [Score]
			, [IsStop]
			, [CreateTime]
			, [UpdateTime]
			, [FrozenAmount]
			, [TotalExchange]
			, [Email] as [User.Email]
			FROM
			(SELECT
			<isPropertyAvailable property="Top" prepend="">
				Top (#Top#)
			</isPropertyAvailable>
			<isPropertyAvailable property="OrderBy" prepend="">
				ROW_NUMBER() OVER (order by $OrderBy$) as RowNumber,
			</isPropertyAvailable>
			a.*,b.Email
			FROM [dbo].[MAccount] a LEFT JOIN [U_UserInfo] b ON a.UserId=b.UserId
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="UserId" prepend="AND">
					a.[UserId] = #UserId#
				</isPropertyAvailable>
				<isPropertyAvailable property="Amount" prepend="AND">
					[Amount] = #Amount#
				</isPropertyAvailable>
				<isPropertyAvailable property="UserLevel" prepend="AND">
					[UserLevel] = #UserLevel#
				</isPropertyAvailable>
				<isPropertyAvailable property="Score" prepend="AND">
					[Score] = #Score#
				</isPropertyAvailable>
				<isPropertyAvailable property="IsStop" prepend="AND">
					[IsStop] = #IsStop#
				</isPropertyAvailable>
				<isPropertyAvailable property="CreateTime" prepend="AND">
					[CreateTime] = #CreateTime#
				</isPropertyAvailable>
				<isPropertyAvailable property="UpdateTime" prepend="AND">
					[UpdateTime] = #UpdateTime#
				</isPropertyAvailable>
				<isPropertyAvailable property="Email" prepend="AND">
					b.[Email] = #Email#
				</isPropertyAvailable>
			</dynamic>
			) t
			<dynamic prepend="WHERE">
				<isPropertyAvailable property="StartRecord" prepend="AND">
				RowNumber>#StartRecord#
				</isPropertyAvailable>
			</dynamic>
		</select>
		
		<select id="Get" parameterClass="Int32" resultClass="MAccount">
			SELECT
			[AccountId]
			, [UserId]
			, [Amount]
			, [UserLevel]
			, [Score]
			, [IsStop]
			, [CreateTime]
			, [UpdateTime]
			, [FrozenAmount]
			, [TotalExchange]
			FROM [dbo].[MAccount]
			WHERE
			([AccountId] = #AccountId#)
		</select>

		<select id="GetByUserId" parameterClass="Int32" resultClass="MAccount">
			SELECT
			[AccountId]
			, [UserId]
			, [Amount]
			, [UserLevel]
			, [Score]
			, [IsStop]
			, [CreateTime]
			, [UpdateTime]
			, [FrozenAmount]
			, [TotalExchange]
			FROM [dbo].[MAccount]
			WHERE
			([UserId] = #UserId#)
		</select>

		
		<insert id="Insert" parameterClass="MAccount" resultClass="Int32">
			INSERT INTO [MAccount] (
			[UserId]
			, [Amount]
			, [UserLevel]
			, [Score]
			, [IsStop]
			, [CreateTime]
			, [UpdateTime]
			, [FrozenAmount]
			, [TotalExchange]
			) VALUES (
			#UserId#
			, #Amount#
			, #UserLevel#
			, #Score#
			, #IsStop#
			, #CreateTime#
			, #UpdateTime#
			, #FrozenAmount#
			, #TotalExchange#
			)

			SELECT @@IDENTITY
		</insert>

		<update id="Update" parameterClass="MAccount" resultClass="Int32">
			UPDATE [MAccount] SET
			[UserId] = #UserId#
			, [Amount] = #Amount#
			, [UserLevel] = #UserLevel#
			, [Score] = #Score#
			, [IsStop] = #IsStop#
			, [CreateTime] = #CreateTime#
			, [UpdateTime] = #UpdateTime#
			, [FrozenAmount] = #FrozenAmount#
			, [TotalExchange] = #TotalExchange#
			WHERE
			([AccountId] = #AccountId#)

			SELECT @@rowcount
		</update>

		<delete id="Delete" parameterClass="int32" resultClass="Int32">
			DELETE FROM [MAccount]
			WHERE
				([AccountId] = #AccountId#)
				
			select @@rowcount
		</delete>
		
	</statements>
</sqlMap>

//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BLL.cst at 2010-12-17 22:06:24
//				By xincai.wu
//==============================================================================
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using TMM.Model;

namespace TMM.Service.Bll.Order
{

	/// <summary>
    /// 名称：AccountLogDao 逻辑层
    /// 创建者：
    /// 创建时间：2011-1-9 11:06:52
    /// 功能描述：
    /// </summary>
    public partial class AccountLogBLL {

        Dal.Order.AccountLogDal dal = new Dal.Order.AccountLogDal();

		/// <summary>
        /// 取得记录数
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <returns></returns>
		public int GetCount(Hashtable param) {
			return dal.GetCount(param);
		}

		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <param name="orderBy">排序方式:默认为“LogId asc”</param>
        /// <param name="first">起始记录：从0开始</param>
        /// <param name="rows">提取的条数</param>
        /// <returns></returns>
		public IList<AccountLog> GetList(Hashtable param,string orderBy,int first,int rows) 
		{
			return dal.GetList(param, orderBy, first, rows);
		}
        /// <summary>
        /// 获取某人的账单明细，通过账单日志表关联订单明细表
        /// </summary>
        /// <param name="userId">用户id</param>
        /// <param name="accountWay">收支途径，参数为null表示全部</param>
        /// <param name="sd"></param>
        /// <param name="ed"></param>
        /// <param name="first"></param>
        /// <param name="rows"></param>
        /// <param name="count"></param>
        /// <returns></returns>
        public IList<AccountLog> GetList(int userId, int[] accountWays, DateTime? sd, DateTime? ed, int first, int rows, out int count) 
        {
            Hashtable p = new Hashtable();
            p.Add("UserId",userId);
            if (accountWays!=null)
                p.Add("AccountWays",accountWays);
            if (sd.HasValue)
                p.Add("Sd", sd.Value);
            if (ed.HasValue)
                p.Add("Ed",ed.Value.AddDays(1));
            count = GetCount(p);
            return GetList(p, null, first, rows);
        }
        /// <summary>
        /// 提取某用户的最近账单
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="accountWays"></param>
        /// <param name="first"></param>
        /// <param name="rows"></param>
        /// <returns></returns>
        public IList<AccountLog> GetList(int userId, int first, int rows)
        {
            Hashtable p = new Hashtable();
            p.Add("UserId", userId);
            
            return GetList(p, null, first, rows);
        }
		
		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="logId"></param>
        /// <returns></returns>
		public AccountLog Get(Int32 logId) {
			return dal.Get(logId);
		}

		/// <summary>
        /// 插入数据
        /// </summary>
        /// <param name="obj">对象</param>
        /// <returns>返回：该条数据的主键Id</returns>
		public int Insert(AccountLog obj) {
            obj.CreateTime = DateTime.Now;
			return dal.Insert(obj);
		}
		
		/// <summary>
        /// 更新数据
        /// </summary>
        /// <param name="obj"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Update(AccountLog obj) {
			return dal.Update(obj);
		}
		
		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="logId"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Delete(Int32 logId) {
			return dal.Delete(logId);
		}
        /// <summary>
        /// 计算总收入
        /// </summary>
        /// <param name="userId"></param>
        /// <returns></returns>
        public decimal SumIncome(int userId) {
            return dal.SumIncome(userId);
        }
		
	}

}

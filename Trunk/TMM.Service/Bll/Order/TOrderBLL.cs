//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BLL.cst at 2010-12-17 22:06:24
//				By xincai.wu
//==============================================================================
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using TMM.Model;

namespace TMM.Service.Bll.Order
{

	/// <summary>
    /// 名称：TOrderDao 逻辑层
    /// 创建者：
    /// 创建时间：2011-1-9 11:06:52
    /// 功能描述：
    /// </summary>
    public partial class TOrderBLL {

        Dal.Order.TOrderDal dal = new Dal.Order.TOrderDal();
        Dal.Order.TOrderDetailDal dalDetail = new TMM.Service.Dal.Order.TOrderDetailDal();

		/// <summary>
        /// 取得记录数
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <returns></returns>
		public int GetCount(Hashtable param) {
			return dal.GetCount(param);
		}

		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <param name="orderBy">排序方式:默认为“OrderId asc”</param>
        /// <param name="first">起始记录：从0开始</param>
        /// <param name="rows">提取的条数</param>
        /// <returns></returns>
		public IList<TOrder> GetList(Hashtable param,string orderBy,int first,int rows) 
		{
			return dal.GetList(param, orderBy, first, rows);
		}
        /// <summary>
        /// 获取某个类型的订单列表
        /// </summary>        
        public IList<TOrder> GetList(int userId,int orderType,int first,int rows,out int count,DateTime? sd,DateTime? ed) {
            Hashtable p = new Hashtable();
            p.Add("UserId", userId);
            p.Add("OrderType",orderType);
            if (sd.HasValue)
                p.Add("Sd",sd.Value);
            if (ed.HasValue)
                p.Add("Ed", ed.Value.AddDays(1));
            count = GetCount(p);
            return GetList(p, null, first, rows);
        }
        /// <summary>
        /// 获取兑换列表
        /// </summary>
        /// <param name="first"></param>
        /// <param name="rows"></param>
        /// <returns></returns>
        public IList<TOrder> GetListForExchange(int first, int rows) {
            return dal.GetListForExchange(first, rows);
        }
		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="orderId"></param>
        /// <returns></returns>
		public TOrder Get(Decimal orderId) {
			return dal.Get(orderId);
		}
        /// <summary>
        /// 获取订单及订单明细
        /// </summary>
        /// <param name="orderId"></param>
        /// <returns></returns>
        public TOrder GetOrderAndDetail(decimal orderId) {
            TOrderDetailBLL tdb = new TOrderDetailBLL();
            TOrder o = Get(orderId);
            o.OrderDetails = (List<TOrderDetail>)tdb.GetList(orderId);
            return o;
        }
		/// <summary>
        /// 插入数据
        /// </summary>
        /// <param name="obj">对象</param>
        /// <returns>返回：该条数据的主键Id</returns>
		public void Insert(TOrder obj) {
			dal.Insert(obj);
		}
        /// <summary>
        /// 保存订单和订单明细
        /// </summary>
        /// <param name="obj"></param>
        public void SaveOrder(TOrder obj) {
            foreach (TOrderDetail d in obj.OrderDetails) {
                dalDetail.Insert(d);
            }
            Insert(obj);
        }
		
		/// <summary>
        /// 更新数据
        /// </summary>
        /// <param name="obj"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Update(TOrder obj) {
			return dal.Update(obj);
		}
		
		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="orderId"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Delete(Decimal orderId) {
			return dal.Delete(orderId);
		}
        /// <summary>
        /// 更新订单状态 for 支付接口
        /// </summary>
        /// <param name="orderid"></param>
        /// <param name="status"></param>
        /// <param name="payway"></param>
        /// <param name="PayWayDetail"></param>
        /// <returns></returns>
        public bool UpdateState2Paid(decimal orderid, int status, int payway, string PayWayDetail)
        {
            return dal.UpdateState2Paid(orderid, status, payway, PayWayDetail);
        }
	}

}

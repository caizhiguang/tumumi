//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BLL.cst at 2011-1-10 10:09:48
//				By xincai.wu
//==============================================================================
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using TMM.Model;

namespace TMM.Service.Bll.Doc {

	/// <summary>
    /// 名称：TJoinDocDao 逻辑层
    /// 创建者：
    /// 创建时间：2011-1-9 11:06:52
    /// 功能描述：
    /// </summary>
    public partial class TJoinDocBLL {

	Dal.Doc.TJoinDocDal dal = new Dal.Doc.TJoinDocDal();

		/// <summary>
        /// 取得记录数
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <returns></returns>
		public int GetCount(Hashtable param) {
			return dal.GetCount(param);
		}

		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <param name="orderBy">排序方式:默认为“JoinId asc”</param>
        /// <param name="first">起始记录：从0开始</param>
        /// <param name="rows">提取的条数</param>
        /// <returns></returns>
		public IList<TJoinDoc> GetList(Hashtable param,string orderBy,int first,int rows) 
		{
			return dal.GetList(param, orderBy, first, rows);
		}
        /// <summary>
        /// 我的投稿
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="count"></param>
        /// <param name="first"></param>
        /// <param name="rows"></param>
        /// <returns></returns>
        public IList<TJoinDoc> GetList(int userId, out int count, int first, int rows) {
            Hashtable p = new Hashtable();
            p.Add("UserId",userId);
            count = GetCount(p);
            return GetList(p, null, first, rows);
        }
        /// <summary>
        /// 最新中标
        /// </summary>
        /// <param name="first"></param>
        /// <param name="rows"></param>
        /// <returns></returns>
        public IList<TJoinDoc> GetList(int first, int rows) {
            Hashtable p = new Hashtable();
            p.Add("IsWin",true);
            return GetList(p, "WinTime DESC", first, rows);
        }
        /// <summary>
        /// 选稿
        /// </summary>
        /// <param name="reqId"></param>
        /// <param name="count"></param>
        /// <param name="first"></param>
        /// <param name="rows"></param>
        /// <returns></returns>
        public IList<TJoinDoc> GetListForXg(int reqId, out int count, int first, int rows) 
        {
            Hashtable p = new Hashtable();
            p.Add("TId", reqId);
            count = GetCount(p);
            return dal.GetListForXg(p, null, first, rows);
        }
		
		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="joinId"></param>
        /// <returns></returns>
		public TJoinDoc Get(Int32 joinId) {
			return dal.Get(joinId);
		}

		/// <summary>
        /// 插入数据
        /// </summary>
        /// <param name="obj">对象</param>
        /// <returns>返回：该条数据的主键Id</returns>
		public int Insert(TJoinDoc obj) {
			return dal.Insert(obj);
		}
		
		/// <summary>
        /// 更新数据
        /// </summary>
        /// <param name="obj"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Update(TJoinDoc obj) {
			return dal.Update(obj);
		}
		
		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="joinId"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Delete(Int32 joinId) {
			return dal.Delete(joinId);
		}
		
	}

}

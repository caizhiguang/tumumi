//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BLL.cst at 2010-12-17 22:06:24
//				By xincai.wu
//==============================================================================
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using TMM.Model;

namespace TMM.Service.Bll.Doc {

	/// <summary>
    /// 名称：DownloadLogDao 逻辑层
    /// 创建者：
    /// 创建时间：2011-1-9 11:06:52
    /// 功能描述：
    /// </summary>
    public partial class DownloadLogBLL {

	Dal.Doc.DownloadLogDal dal = new Dal.Doc.DownloadLogDal();

		/// <summary>
        /// 取得记录数
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <returns></returns>
		public int GetCount(Hashtable param) {
			return dal.GetCount(param);
		}

		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <param name="orderBy">排序方式:默认为“LogId asc”</param>
        /// <param name="first">起始记录：从0开始</param>
        /// <param name="rows">提取的条数</param>
        /// <returns></returns>
		public IList<DownloadLog> GetList(Hashtable param,string orderBy,int first,int rows) 
		{
			return dal.GetList(param, orderBy, first, rows);
		}
		
		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="logId"></param>
        /// <returns></returns>
		public DownloadLog Get(Int32 logId) {
			return dal.Get(logId);
		}

		/// <summary>
        /// 插入数据
        /// </summary>
        /// <param name="obj">对象</param>
        /// <returns>返回：该条数据的主键Id</returns>
		public int Insert(DownloadLog obj) {
			return dal.Insert(obj);
		}
		
		/// <summary>
        /// 更新数据
        /// </summary>
        /// <param name="obj"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Update(DownloadLog obj) {
			return dal.Update(obj);
		}
		
		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="logId"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Delete(Int32 logId) {
			return dal.Delete(logId);
		}
        /// <summary>
        /// 当天下载免费文档的数量
        /// </summary>
        /// <param name="userId"></param>
        /// <returns></returns>
        public int GetDownCountToday(int userId)
        {
            DateTime n = DateTime.Now;
            //DateTime today = DateTime.Parse(string.Format("{0}-{1}-1",n.Year,n.Month));
            //throw new Exception(today.ToShortDateString());
            Hashtable p = new Hashtable();
            p.Add("UserId",userId);
            p.Add("CreateTime",n);
            return GetCount(p);
        }
        /// <summary>
        /// 是否已经存在了下载日志，通过用户ID和文档ID判断
        /// 即同一用户下载同一文档，不记录重复下载日志
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="docId"></param>
        /// <returns></returns>
        public bool IsExistDownLog(int userId, int docId)
        {
            Hashtable p = new Hashtable();
            p.Add("UserId",userId);
            p.Add("DocId",docId);
            int c = GetCount(p);
            return c > 0;
        }
	}

}

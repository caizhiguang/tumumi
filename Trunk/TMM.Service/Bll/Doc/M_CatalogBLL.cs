//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BLL.cst at 2011-1-10 10:09:48
//				By xincai.wu
//==============================================================================
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using TMM.Model;

namespace TMM.Service.Bll.Doc {

	/// <summary>
    /// 名称：MCatalogDao 逻辑层
    /// 创建者：
    /// 创建时间：2011-1-9 11:06:52
    /// 功能描述：
    /// </summary>
    public partial class MCatalogBLL {

	Dal.Doc.MCatalogDal dal = new Dal.Doc.MCatalogDal();

		/// <summary>
        /// 取得记录数
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <returns></returns>
		public int GetCount(Hashtable param) {
			return dal.GetCount(param);
		}

		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <param name="orderBy">排序方式:默认为“CateId asc”</param>
        /// <param name="first">起始记录：从0开始</param>
        /// <param name="rows">提取的条数</param>
        /// <returns></returns>
		public IList<MCatalog> GetList(Hashtable param,string orderBy,int first,int rows) 
		{
			return dal.GetList(param, orderBy, first, rows);
		}
        /// <summary>
        /// 获取某用户的文件夹
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="type">1：上传分类 2：收藏分类</param>
        /// <returns></returns>
        public IList<MCatalog> GetListByUser(int userId,int type)
        {
            Hashtable p = new Hashtable();
            p.Add("UserId",userId);
            p.Add("CatalogType",type);
            return GetList(p, null, 0, 1000);
        }
		
		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="cateId"></param>
        /// <returns></returns>
		public MCatalog Get(Int32 cateId) {
			return dal.Get(cateId);
		}
        /// <summary>
        /// 通过用户ID和文件夹ID获取数据
        /// </summary>
        /// <param name="cateId"></param>
        /// <param name="userId"></param>
        /// <returns></returns>
        public MCatalog Get(int cateId, int userId) { 
            Hashtable p = new Hashtable();
            p.Add("CateId",cateId);
            p.Add("UserId",userId);
            IList<MCatalog> list = GetList(p, null, 0, 1);
            if (list.Count > 0)
            {
                return list[0];
            }
            else
                return null;
        }

		/// <summary>
        /// 插入数据
        /// </summary>
        /// <param name="obj">对象</param>
        /// <returns>返回：该条数据的主键Id</returns>
		public int Insert(MCatalog obj) {
			return dal.Insert(obj);
		}
		
		/// <summary>
        /// 更新数据
        /// </summary>
        /// <param name="obj"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Update(MCatalog obj) {
			return dal.Update(obj);
		}
		
		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="cateId"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Delete(Int32 cateId) {
			return dal.Delete(cateId);
		}
		
	}

}

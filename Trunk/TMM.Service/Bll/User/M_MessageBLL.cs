//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BLL.cst at 2010-12-17 15:46:12
//				By xincai.wu
//==============================================================================
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using TMM.Model;
using TMM.Model.Enums;

namespace TMM.Service.Bll.User
{

	/// <summary>
    /// 名称：MMessageDao 逻辑层
    /// 创建者：
    /// 创建时间：2010-11-29 19:12:38
    /// 功能描述：
    /// </summary>
    public partial class M_MessageBLL {

        Dal.User.M_MessageDal dal = new TMM.Service.Dal.User.M_MessageDal();

		/// <summary>
        /// 取得记录数
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <returns></returns>
		public int GetCount(Hashtable param) {            
			return dal.GetCount(param);
		}

		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <param name="orderBy">排序方式:默认为“Mid asc”</param>
        /// <param name="first">起始记录：从0开始</param>
        /// <param name="rows">提取的条数</param>
        /// <returns></returns>
		public IList<M_Message> GetList(Hashtable param,string orderBy,int first,int rows) 
		{
            if (string.IsNullOrEmpty(orderBy)) {
                orderBy = "CreateTime desc";
            }
			return dal.GetList(param, orderBy, first, rows);
		}
        /// <summary>
        /// 提取所有普通消息列表
        /// </summary>
        /// <param name="first"></param>
        /// <param name="rows"></param>
        /// <returns></returns>
        //public IList<M_Message> GetList(int first,int rows,out int count,int userId,int direct)
        //{
        //    Hashtable p = new Hashtable();
        //    p.Add("Mtype",(int)Model.Enums.MessageType.Message);
        //    count = GetCount(p);
        //    return GetList(p, null, first, rows);
        //}
        /// <summary>
        /// 获取发送给管理员的消息列表
        /// </summary>
        /// <returns></returns>
        public IList<M_Message> GetListSendToAdmin(int senderId,int recieverId,int first,int rows,out int count) {
            Hashtable p = new Hashtable();
            p.Add("SenderId",senderId);
            p.Add("Mtype",(int)Model.Enums.MessageType.Message);
            p.Add("RecieverId",recieverId);
            count = GetCount(p);
            return GetList(p, "CreateTime desc", first, rows);
        }
		
		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="mid"></param>
        /// <returns></returns>
		public M_Message Get(Int64 mid) {
			return dal.Get(mid);
		}

		/// <summary>
        /// 插入数据
        /// </summary>
        /// <param name="obj">对象</param>
        /// <returns>返回：该条数据的主键Id</returns>
		public int Insert(M_Message obj) {
			return dal.Insert(obj);
		}
		
		/// <summary>
        /// 更新数据
        /// </summary>
        /// <param name="obj"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Update(M_Message obj) {
			return dal.Update(obj);
		}
		
		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="mid"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Delete(Int64 mid) {
			return dal.Delete(mid);
		}
        /// <summary>
        /// 获取系统消息列表
        /// </summary>       
        public IList<M_Message> GetSysMessageList(int first,int rows) { 
            Hashtable p = new Hashtable();
            p.Add("Mtype",(int)MessageType.SysMsg);
            return GetList(p, "CreateTime desc", first, rows);
        }
        /// <summary>
        /// 获取某用户的发送消息列表
        /// </summary>
        /// <param name="first"></param>
        /// <param name="rows"></param>
        /// <param name="count"></param>
        /// <param name="senderId"></param>
        /// <returns></returns>
        public IList<M_Message> GetListByUser(int first, int rows, out int count, int senderId)
        {
            Hashtable p = new Hashtable();
            p.Add("Mtype", (int)MessageType.Message);
            p.Add("SenderId", senderId);
            p.Add("SendDeleteFlag",0);
            count = GetCount(p);
            return GetList(p, null, first, rows);
        }
        
        /// <summary>
        /// 发给某用户的消息列表
        /// </summary>
        public IList<M_Message> GetUserMsgList(int first,int rows,out int count,int recieverId)
        {
            Hashtable p = new Hashtable();
            p.Add("Mtype",(int)MessageType.Message);
            p.Add("RecieverId",recieverId);
            p.Add("RecieveDeleteFlag",0);
            count = GetCount(p);
            return GetList(p, null, first, rows);
        }
        /// <summary>
        /// 获取通知列表
        /// </summary>
        /// <param name="first"></param>
        /// <param name="rows"></param>
        /// <param name="count"></param>
        /// <param name="recieverId"></param>
        /// <returns></returns>
        public IList<M_Message> GetInforms(int first, int rows, out int count, int recieverId)
        {
            Hashtable p = new Hashtable();
            p.Add("Mtype",(int)MessageType.Inform);
            p.Add("RecieverId",recieverId);
            p.Add("RecieveDeleteFlag",0);
            count = GetCount(p);
            return GetList(p, null, first, rows);
        }

        public bool SetDeleteFlagByReciever(Int64 mid)
        {
            return dal.SetDeleteFlagByReciever(mid);
        }
        /// <summary>
        /// 发送者打删除标记
        /// </summary>
        /// <param name="mid"></param>
        /// <returns></returns>
        public bool SetDeleteFlagBySender(Int64 mid)
        {
            return dal.SetDeleteFlagBySender(mid);
        }

        public bool SetRead(Int64 mid) {
            return dal.SetRead(mid);
        }
        /// <summary>
        /// 获取某用户的所有未读的新消息
        /// </summary>
        /// <param name="recieverId"></param>
        /// <returns></returns>
        public int GetNewMsgCount(int recieverId) {
            Hashtable p = new Hashtable();
            p.Add("RecieverId",recieverId);
            p.Add("IsRead",0);
            p.Add("RecieveDeleteFlag",0);
            return GetCount(p);
        }
	}

}

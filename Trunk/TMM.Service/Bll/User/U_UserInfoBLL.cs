//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BLL.cst at 2010-11-29 15:51:35
//				By xincai.wu
//==============================================================================
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using TMM.Model;

namespace TMM.Service.Bll.User {

	/// <summary>
    /// 名称：UUserInfoDao 逻辑层
    /// 创建者：
    /// 创建时间：2010-11-29 19:12:38
    /// 功能描述：
    /// </summary>
    public partial class U_UserInfoBLL {

	
    Dal.User.U_UserInfoDal dal = new TMM.Service.Dal.User.U_UserInfoDal();
		/// <summary>
        /// 取得记录数
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <returns></returns>
		public int GetCount(Hashtable param) {
			return dal.GetCount(param);
		}

		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <param name="orderBy">排序方式:默认为“UserId asc”</param>
        /// <param name="first">起始记录：从0开始</param>
        /// <param name="rows">提取的条数</param>
        /// <returns></returns>
		public IList<U_UserInfo> GetList(Hashtable param,string orderBy,int first,int rows) 
		{
			return dal.GetList(param, orderBy, first, rows);
		}
        /// <summary>
        /// 提取马甲用户列表
        /// </summary>
        /// <param name="orderBy"></param>
        /// <param name="first"></param>
        /// <param name="rows"></param>
        /// <returns></returns>
        public IList<U_UserInfo> GetListMj(string orderBy, int first, int rows)
        {
            Hashtable p = new Hashtable();
            p.Add("IsMajia",true);
            return dal.GetList(p, orderBy, first, rows);
        }
		
		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="userId"></param>
        /// <returns></returns>
		public U_UserInfo Get(Int32 userId) {
			return dal.Get(userId);
		}

		/// <summary>
        /// 插入数据
        /// </summary>
        /// <param name="obj">对象</param>
        /// <returns>返回：该条数据的主键Id</returns>
		public int Insert(U_UserInfo obj) {
			return dal.Insert(obj);
		}
		
		/// <summary>
        /// 更新数据
        /// </summary>
        /// <param name="obj"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Update(U_UserInfo obj) {
			return dal.Update(obj);
		}
		
		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="userId"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool Delete(Int32 userId) {
			return dal.Delete(userId);
		}

        public U_UserInfo FindUserByEmail(string email)
        {
            Hashtable p = new Hashtable();
            p.Add("Email",email);
            IList<U_UserInfo> findUser = GetList(p, "", 0, 1);
            if (findUser.Count > 0) {
                return findUser[0];
            }
            return null;
        }
        public U_UserInfo FindUserByLogin(string email, string pwd) 
        {
            Hashtable p = new Hashtable();
            p.Add("Email", email);
            p.Add("Password",pwd);
            p.Add("IsStop",false);
            IList<U_UserInfo> findUser = GetList(p, "", 0, 1);
            if (findUser.Count > 0)
            {
                return findUser[0];
            }
            return null;
        }
        public U_UserInfo FindUserByNickName(string nickName)
        {
            Hashtable p = new Hashtable();
            p.Add("NickName",nickName);
            IList<U_UserInfo> findUser = GetList(p, "", 0, 1);
            if (findUser.Count > 0) {
                return findUser[0];
            }
            return null;
        }
        public U_UserInfo FindUserByOpenId(string openid)
        {
            Hashtable p = new Hashtable();
            p.Add("OpenId",openid);
            IList<U_UserInfo> findUser = GetList(p, "", 0, 1);
            if (findUser.Count > 0) {
                return findUser[0];
            }
            return null;
        }
        /// <summary>
        /// 更新马甲状态
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="isMj"></param>
        /// <returns></returns>
        public bool UpdateMj(int userId, bool isMj)
        {
            return dal.UpdateMj(userId, isMj);
        }
        /// <summary>
        /// 更新用户的上传文档数量
        /// </summary>
        /// <param name="uploadCount"></param>
        public void UpdateUploadCount(int uploadCount,int userId) {
            dal.UpdateUploadCount(uploadCount,userId);
        }
		
	}

}

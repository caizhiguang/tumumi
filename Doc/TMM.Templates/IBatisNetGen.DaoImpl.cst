<%-- 
Name:	IBatisNetGen.DaoImpl.cst
Version: 2007.02.08
Author: Yaojian  ( smrtk@hotmail.com )
Description: Generates the data access interface for IBatis.Net (see ibatis.apache.org)
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" ResponseEncoding="UTF-8" Src="CSBatisBuilder.cs" Inherits="TableTemplate" Debug="true"  Description="Generates IBatis map and data class from a database table." %>

<%@ Assembly Name="System" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Src="CSBatisBuilder.cs" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.ComponentModel" %>
<%@ Import Namespace="System.Collections.Specialized" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="CSBatisBuilder" %>
<script runat="template">
	protected override FileOption GetDefaultFileOption() {
		return FileSetOption.CreateDefaultDaoImplOption();
	}
</script>
//==============================================================================
//	CAUTION: This file is generated by <% =CodeTemplateInfo.FileName %> at <% =CodeTemplateInfo.DateCreated %>
//				By xincai.wu
//==============================================================================
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using TMM.Model;
using TMM.Persistence;


namespace TMM.Service.Dal.Doc {
<%	if (Builder.EntityNamespace != Builder.DaoImplNamespace) { %>
	using <% =Builder.EntityNamespace %>;
<%	} %>
<%	if (Builder.DaoIntfNamespace != Builder.DaoImplNamespace) { %>
	using <% =Builder.DaoIntfNamespace %>;
<%	} %>
<%	if (Builder.DaoImplOption.Usings != null) {
	foreach (String s in Builder.DaoImplOption.Usings) { %>
	using <% =s %>;
	<%		} %>
<%	} %>

	/// <summary>
    /// 名称：<% =Builder.DaoImplName %> 数据层
    /// 开发者：
    /// 创建时间：<% =CodeTemplateInfo.DateModified %>
    /// 功能描述：
    /// </summary>
    public <% =Builder.DaoImplPartialDecl %>class <% =Builder.EntityName %>Dal {

<%	//GetCount
	if (Builder.DaoMethodSetOption.GetCountOption.GenerateImpl) { %>
		/// <summary>
        /// 取得记录数
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <returns></returns>
		public int <% =Builder.GetCountMethod %>(Hashtable param) {
			if (param == null)
                param = new Hashtable();
				
			String stmtId = "<% =Builder.EntityName %>.<% =Builder.GetCountStmtId %>";
			return <% =Builder.SqlMapper %>.QueryForObject<int>(stmtId, param);
		}

<%	} %>
<%	//GetList
	if (Builder.DaoMethodSetOption.FindAllOption.GenerateIntf) { %>
		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="param">可选参数为：</param>
        /// <param name="orderBy">排序方式:默认为“<%= Builder.PkColumns[0].ResultColumnName%> asc”</param>
        /// <param name="first">起始记录：从0开始</param>
        /// <param name="rows">提取的条数</param>
        /// <returns></returns>
		public IList<<% =Builder.EntityName %>> GetList(Hashtable param,string orderBy,int first,int rows) 
		{
			if (param == null)
                param = new Hashtable();

            param.Add("Top", first+ rows);
            param.Add("StartRecord", first);

            if (string.IsNullOrEmpty(orderBy))
                param.Add("OrderBy", "<%= Builder.PkColumns[0].ResultColumnName%> desc");
			else
                param.Add("OrderBy", orderBy);
				
			String stmtId = "<% =Builder.EntityName %>.GetList";
			return <% =Builder.SqlMapper %>.QueryForList<<% =Builder.EntityName %>>(stmtId, param);
		}
		
<%	} //if %>
<%	//Get
	if (Builder.DaoMethodSetOption.FindOption.GenerateImpl) { %>
		/// <summary>
        /// 提取数据
        /// </summary>
        /// <param name="<%= Builder.GetClrParamNames(Builder.PkColumns)%>"></param>
        /// <returns></returns>
		public <% =Builder.EntityName %> Get(<% =Builder.GetClrParamsDecl(Builder.PkColumns) %>) {
			String stmtId = "<% =Builder.EntityName %>.Get";
			return <% =Builder.SqlMapper %>.QueryForObject<<% =Builder.EntityName %>>(stmtId, <% =Builder.GetClrParamNames(Builder.PkColumns) %>);
		}

<%	} //if %>
<%	//Insert
	if (Builder.DaoMethodSetOption.InsertOption.GenerateImpl) { %>
		/// <summary>
        /// 插入数据
        /// </summary>
        /// <param name="obj">对象</param>
        /// <returns>返回：该条数据的主键Id</returns>
		public int <% =Builder.InsertMethod %>(<% =Builder.EntityName %> obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "<% =Builder.EntityName %>.<% =Builder.InsertStmtId %>";
			return <% =Builder.SqlMapper %>.QueryForObject<int>(stmtId, obj);
		}
		
<%	} //if %>
<%	//Update
	if (Builder.DaoMethodSetOption.UpdateOption.GenerateImpl) { %>
		/// <summary>
        /// 更新数据
        /// </summary>
        /// <param name="obj"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool <% =Builder.UpdateMethod %>(<% =Builder.EntityName %> obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "<% =Builder.EntityName %>.<% =Builder.UpdateStmtId %>";
			int result = <% =Builder.SqlMapper %>.QueryForObject<int>(stmtId, obj);
			return result > 0 ? true : false;
		}
		
<%	} //if %>
<%	//Delete
	if (Builder.DaoMethodSetOption.DeleteOption.GenerateImpl) { %>
		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="<%= Builder.GetClrParamNames(Builder.PkColumns)%>"></param>
        /// <returns>返回：ture 成功，false 失败</returns>
		public bool <% =Builder.DeleteMethod %>(<% =Builder.GetClrParamsDecl(Builder.PkColumns) %>) {
			String stmtId = "<% =Builder.EntityName %>.<% =Builder.DeleteStmtId %>";
			int result = <% =Builder.SqlMapper %>.QueryForObject<int>(stmtId, <%= Builder.GetClrParamNames(Builder.PkColumns)%>);
			return result > 0 ? true : false;
		}
		
<%	} //if %>
	}

}
